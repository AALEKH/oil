#!/usr/bin/env bash
#
# Wrappers for mycpp.  Might be "Pea" later.
#
# Usage:
#   build/translate.sh <function name>

set -o nounset
set -o pipefail
set -o errexit

REPO_ROOT=$(cd $(dirname $0)/.. && pwd)

source mycpp/common.sh  # MYPY_REPO
source mycpp/NINJA-steps.sh

# _build/tmp/osh_eval_raw.cc won't be included in the tarball
# _build/cpp/osh_eval.cc is in the tarball
readonly TEMP_DIR=_build/tmp

#
# One off for ASDL runtime.  This is only used in tests!
#

asdl-runtime() {
  ### Translate ASDL deps for unit tests

  # - MESSY: asdl/runtime.h contains the SAME DEFINITIONS as
  #   _build/cpp/osh_eval.h.  But we use it to run ASDL unit tests without
  #   depending on Oil.

  local name=asdl_runtime
  local raw=$TEMP_DIR/${name}_raw.cc 

  mkdir -p $TEMP_DIR

  local header=$TEMP_DIR/runtime.h

  mycpp \
    --header-out $header \
    --to-header asdl.runtime \
    --to-header asdl.format \
    $REPO_ROOT/{asdl/runtime,asdl/format,core/ansi,pylib/cgi,qsn_/qsn}.py \
    > $raw 

  { 
    cat <<EOF
// asdl/runtime.h: GENERATED by mycpp from asdl/{runtime,format}.py

#include "_build/cpp/hnode_asdl.h"
#include "cpp/qsn.h"

#ifdef OLDSTL_BINDINGS
#include "mycpp/oldstl_containers.h"
#include "mycpp/oldstl_builtins.h"  // str
#else
#include "mycpp/gc_containers.h"
#include "mycpp/gc_mylib.h"
#endif

// For hnode::External in asdl/format.py.  TODO: Remove this when that is removed.
inline Str* repr(void* obj) {
  assert(0);
}
EOF
    cat $header

  } > asdl/runtime.h

  { cat <<EOF
// asdl/runtime.cc: GENERATED by mycpp from asdl/{runtime,format}.py

EOF
    cat $raw

  } > asdl/runtime.cc
}

"$@"
