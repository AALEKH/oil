#!/bin/sh
#
# POSIX shell script to detect target system properties required by Oil.
# Distributed with the source tarball.
#
# The only library Oil needs is readline.
#
# External utilities used: expr, cc
#
# TODO: Should be able to run this from another directory.
#
# Other settings: LTO, PGO?  Consider moving prefix, LTO, PGO to build and
# install steps.

log() {
  echo "$0: $@" 2>&1
}

die() {
  echo "$0 ERROR: $@" 2>&1
  exit 1
}

# Default value is /usr/bin/oil.  The user might want to change it to
# /usr/local/bin/oil or $HOME/bin/oil.
FLAG_prefix='/usr/bin'
FLAG_with_readline=''  # Fail if it's not available.
FLAG_without_readline=''  # Don't even check if it's available>

while true; do
  case "$1" in
    '')
      break
      ;;
    --help)
      # TODO: Fill out help
      echo HELP
      ;;

    --with-readline)
      FLAG_with_readline=1
      ;;

    --without-readline)
      FLAG_without_readline=1
      ;;

    # TODO: Maybe prefix only needs to be part of the install step?  I'm not
    # sure if we need it for building anything.
    --prefix=*)
      FLAG_prefix=$(expr "$1" : '--prefix=\(.*\)')
      ;;
    --prefix)
      if test $# -eq 1; then
        die "--prefix requires an argument"
      fi
      shift
      FLAG_prefix=$1
      ;;
    *)
      die "Invalid argument '$1'"
      ;;
  esac
  shift
done

# No output file, no logging, no stderr.
# TODO: Maybe send stdout/stderr to config.log?
cc_quiet() {
  cc "$@" -o /dev/null >/dev/null 2>&1
}

# Write a shell script to standard out with variables, or fail.
detect_readline() {
  if cc_quiet build/detect-readline.c -l readline; then
    echo 'HAVE_READLINE=1'
  else
    if test "$FLAG_with_readline" = 1; then
      die 'readline was not detected on the system (--with-readline passed).'
    fi
    echo 'HAVE_READLINE='
  fi
}

detect_and_echo_vars() {
  if test "$FLAG_without_readline" = 1; then
    echo 'HAVE_READLINE='
  else
    detect_readline
  fi
  echo "PREFIX=$FLAG_prefix"
}

# Another way of working: set detected-config.mk ?
# And set the default target as oil_readline, oil_no_readline, oil_lto,
# oil_pgo, etc.?
main() {
  if ! cc_quiet build/detect-cc.c; then
    die "Couldn't compile a basic C program (cc not installed?)"
  fi

  # The shell build actions will 'source _build/detected-config.sh'.  And then
  # adjust flags to compiler (-D, -l, etc.)
  mkdir -p _build
  local out=_build/detected-config.sh
  detect_and_echo_vars > $out
  log "Wrote $out"
}

main "$@"
